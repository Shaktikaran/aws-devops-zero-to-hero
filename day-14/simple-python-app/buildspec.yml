version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
    DOCKER_REGISTRY_URL: /myapp/docker-registry/url

phases:
  install:
    commands:
      - echo "Installing dependencies for Python build..."
      - yum install -y gcc gcc-c++ make zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel libffi-devel xz-devel curl git
      - echo "Cleaning up previous pyenv installation if exists..."
      - rm -rf /root/.pyenv
      - echo "Installing pyenv..."
      - curl https://pyenv.run | bash
      - export PATH="$HOME/.pyenv/bin:$PATH"
      - eval "$(pyenv init --path)"
      - eval "$(pyenv virtualenv-init -)"
      - echo "Installing Python 3.11..."
      - pyenv install 3.11
      - pyenv global 3.11
      - python --version
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - pip install --no-cache-dir -r day-14/simple-python-app/requirements.txt
  build:
    commands:
      - echo "Running tests..."
      - cd day-14/simple-python-app/
      - echo "Building Docker image..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest"
  post_build:
    commands:
      - echo "Build completed successfully!"
artifacts:
  files:
    - '**/*'
  base-directory: day-14/simple-python-app
